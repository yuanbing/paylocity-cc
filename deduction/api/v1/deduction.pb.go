// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: v1/deduction.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ComputeDeductionRequest represents a request for computing the deduction amount
type ComputeDeductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeName string                              `protobuf:"bytes,1,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	Dependents   []*ComputeDeductionRequestDependent `protobuf:"bytes,2,rep,name=dependents,proto3" json:"dependents,omitempty"`
}

func (x *ComputeDeductionRequest) Reset() {
	*x = ComputeDeductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_deduction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeDeductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeDeductionRequest) ProtoMessage() {}

func (x *ComputeDeductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_deduction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeDeductionRequest.ProtoReflect.Descriptor instead.
func (*ComputeDeductionRequest) Descriptor() ([]byte, []int) {
	return file_v1_deduction_proto_rawDescGZIP(), []int{0}
}

func (x *ComputeDeductionRequest) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *ComputeDeductionRequest) GetDependents() []*ComputeDeductionRequestDependent {
	if x != nil {
		return x.Dependents
	}
	return nil
}

// ComputeDeductionResponse represents a response of list of deductions (one per pay check)
// The list is sorted by the paycheck_no ascendingly.
type ComputeDeductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCost float64                              `protobuf:"fixed64,1,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	Detail    []*ComputeDeductionResponseDeduction `protobuf:"bytes,2,rep,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ComputeDeductionResponse) Reset() {
	*x = ComputeDeductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_deduction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeDeductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeDeductionResponse) ProtoMessage() {}

func (x *ComputeDeductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_deduction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeDeductionResponse.ProtoReflect.Descriptor instead.
func (*ComputeDeductionResponse) Descriptor() ([]byte, []int) {
	return file_v1_deduction_proto_rawDescGZIP(), []int{1}
}

func (x *ComputeDeductionResponse) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *ComputeDeductionResponse) GetDetail() []*ComputeDeductionResponseDeduction {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ComputeDeductionRequestDependent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ComputeDeductionRequestDependent) Reset() {
	*x = ComputeDeductionRequestDependent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_deduction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeDeductionRequestDependent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeDeductionRequestDependent) ProtoMessage() {}

func (x *ComputeDeductionRequestDependent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_deduction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeDeductionRequestDependent.ProtoReflect.Descriptor instead.
func (*ComputeDeductionRequestDependent) Descriptor() ([]byte, []int) {
	return file_v1_deduction_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ComputeDeductionRequestDependent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ComputeDeductionResponseDeduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaycheckNo      int32   `protobuf:"varint,1,opt,name=paycheck_no,json=paycheckNo,proto3" json:"paycheck_no,omitempty"`
	DeductionAmount float64 `protobuf:"fixed64,2,opt,name=deduction_amount,json=deductionAmount,proto3" json:"deduction_amount,omitempty"`
}

func (x *ComputeDeductionResponseDeduction) Reset() {
	*x = ComputeDeductionResponseDeduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_deduction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeDeductionResponseDeduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeDeductionResponseDeduction) ProtoMessage() {}

func (x *ComputeDeductionResponseDeduction) ProtoReflect() protoreflect.Message {
	mi := &file_v1_deduction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeDeductionResponseDeduction.ProtoReflect.Descriptor instead.
func (*ComputeDeductionResponseDeduction) Descriptor() ([]byte, []int) {
	return file_v1_deduction_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ComputeDeductionResponseDeduction) GetPaycheckNo() int32 {
	if x != nil {
		return x.PaycheckNo
	}
	return 0
}

func (x *ComputeDeductionResponseDeduction) GetDeductionAmount() float64 {
	if x != nil {
		return x.DeductionAmount
	}
	return 0
}

var File_v1_deduction_proto protoreflect.FileDescriptor

var file_v1_deduction_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x18, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x1a, 0x57, 0x0a, 0x09, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x6f, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x9a, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x85, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x44, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x64, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x62, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_deduction_proto_rawDescOnce sync.Once
	file_v1_deduction_proto_rawDescData = file_v1_deduction_proto_rawDesc
)

func file_v1_deduction_proto_rawDescGZIP() []byte {
	file_v1_deduction_proto_rawDescOnce.Do(func() {
		file_v1_deduction_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_deduction_proto_rawDescData)
	})
	return file_v1_deduction_proto_rawDescData
}

var file_v1_deduction_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_deduction_proto_goTypes = []interface{}{
	(*ComputeDeductionRequest)(nil),           // 0: com.paylocity.deduction.api.v1.ComputeDeductionRequest
	(*ComputeDeductionResponse)(nil),          // 1: com.paylocity.deduction.api.v1.ComputeDeductionResponse
	(*ComputeDeductionRequestDependent)(nil),  // 2: com.paylocity.deduction.api.v1.ComputeDeductionRequest.dependent
	(*ComputeDeductionResponseDeduction)(nil), // 3: com.paylocity.deduction.api.v1.ComputeDeductionResponse.deduction
}
var file_v1_deduction_proto_depIdxs = []int32{
	2, // 0: com.paylocity.deduction.api.v1.ComputeDeductionRequest.dependents:type_name -> com.paylocity.deduction.api.v1.ComputeDeductionRequest.dependent
	3, // 1: com.paylocity.deduction.api.v1.ComputeDeductionResponse.detail:type_name -> com.paylocity.deduction.api.v1.ComputeDeductionResponse.deduction
	0, // 2: com.paylocity.deduction.api.v1.DeductionService.ComputeDeduction:input_type -> com.paylocity.deduction.api.v1.ComputeDeductionRequest
	1, // 3: com.paylocity.deduction.api.v1.DeductionService.ComputeDeduction:output_type -> com.paylocity.deduction.api.v1.ComputeDeductionResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_deduction_proto_init() }
func file_v1_deduction_proto_init() {
	if File_v1_deduction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_deduction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeDeductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_deduction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeDeductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_deduction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeDeductionRequestDependent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_deduction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeDeductionResponseDeduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_deduction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_deduction_proto_goTypes,
		DependencyIndexes: file_v1_deduction_proto_depIdxs,
		MessageInfos:      file_v1_deduction_proto_msgTypes,
	}.Build()
	File_v1_deduction_proto = out.File
	file_v1_deduction_proto_rawDesc = nil
	file_v1_deduction_proto_goTypes = nil
	file_v1_deduction_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeductionServiceClient is the client API for DeductionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeductionServiceClient interface {
	ComputeDeduction(ctx context.Context, in *ComputeDeductionRequest, opts ...grpc.CallOption) (*ComputeDeductionResponse, error)
}

type deductionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeductionServiceClient(cc grpc.ClientConnInterface) DeductionServiceClient {
	return &deductionServiceClient{cc}
}

func (c *deductionServiceClient) ComputeDeduction(ctx context.Context, in *ComputeDeductionRequest, opts ...grpc.CallOption) (*ComputeDeductionResponse, error) {
	out := new(ComputeDeductionResponse)
	err := c.cc.Invoke(ctx, "/com.paylocity.deduction.api.v1.DeductionService/ComputeDeduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeductionServiceServer is the server API for DeductionService service.
type DeductionServiceServer interface {
	ComputeDeduction(context.Context, *ComputeDeductionRequest) (*ComputeDeductionResponse, error)
}

// UnimplementedDeductionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeductionServiceServer struct {
}

func (*UnimplementedDeductionServiceServer) ComputeDeduction(context.Context, *ComputeDeductionRequest) (*ComputeDeductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComputeDeduction not implemented")
}

func RegisterDeductionServiceServer(s *grpc.Server, srv DeductionServiceServer) {
	s.RegisterService(&_DeductionService_serviceDesc, srv)
}

func _DeductionService_ComputeDeduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputeDeductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeductionServiceServer).ComputeDeduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.paylocity.deduction.api.v1.DeductionService/ComputeDeduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeductionServiceServer).ComputeDeduction(ctx, req.(*ComputeDeductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeductionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.paylocity.deduction.api.v1.DeductionService",
	HandlerType: (*DeductionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ComputeDeduction",
			Handler:    _DeductionService_ComputeDeduction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/deduction.proto",
}
